
services:
  cdc-zookeeper:
    image: confluentinc/cp-zookeeper:7.6.1
    hostname: cdc-zookeeper
    container_name: cdc-zookeeper
    ports:
      - 3181:2181
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    healthcheck:
      test: echo srvr | nc localhost 2181 || exit 1
      start_period: 10s
      retries: 20
      interval: 10s
    networks:
      default:
        ipv4_address: 172.30.1.1
  cdc-broker:
    image: confluentinc/cp-kafka:7.6.1
    hostname: cdc-broker
    container_name: cdc-broker
    depends_on:
      cdc-zookeeper:
        condition: service_healthy
    ports:
      - 29092:29092
      - 9092:9092
      - 9101:9101
      - 9094:9094
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: cdc-zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://cdc-broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
    volumes:
      - ./kafka/kafka-data:/var/lib/kafka/data
    healthcheck:
      test: nc -z localhost 9092 || exit -1
      start_period: 15s
      interval: 5s
      timeout: 10s
      retries: 10
    networks:
      default:
        ipv4_address: 172.30.1.2
  cdc-debezium:
    image: debezium/connect:2.3
    build:
      context: .
      dockerfile: Dockerfile_debezium
    container_name: cdc-debezium
    hostname: cdc-debezium
    depends_on:
      cdc-broker:
        condition: service_healthy
    ports:
      - 9083:8083
    environment:
      BOOTSTRAP_SERVERS: cdc-broker:29092
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: connect_configs
      STATUS_STORAGE_TOPIC: connect_statuses
      OFFSET_STORAGE_TOPIC: connect_offsets
      ENABLE_DEBEZIUM_SCRIPTING: "true"
    volumes:
      - ./kafka/connectors:/kafka/connectors
      - ./kafka/plugins:/kafka/plugins
    healthcheck:
      test:
        - CMD
        - curl
        - --silent
        - --fail
        - -X
        - GET
        - http://localhost:8083/connectors
      start_period: 50s
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      default:
        ipv4_address: 172.30.1.3

  cdc-schema-registry:
    image: confluentinc/cp-schema-registry:7.6.1
    hostname: cdc-schema-registry
    container_name: cdc-schema-registry
    depends_on:
      cdc-broker:
        condition: service_healthy
    ports:
      - 9081:8081
    environment:
      SCHEMA_REGISTRY_HOST_NAME: cdc-schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: cdc-broker:29092
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
    healthcheck:
      test: |
        curl --fail --silent http://localhost:8081/subjects --output /dev/null || exit 1
      start_period: 90s
      interval: 5s
      timeout: 10s
      retries: 10
    networks:
      default:
        ipv4_address: 172.30.1.4
  cdc-rest-proxy:
    image: confluentinc/cp-kafka-rest:7.6.1
    container_name: cdc-rest-proxy
    hostname: cdc-rest-proxy
    depends_on:
      cdc-broker:
        condition: service_healthy
    ports:
      - 9082:8082
    environment:
      KAFKA_REST_HOST_NAME: cdc-rest-proxy
      KAFKA_REST_BOOTSTRAP_SERVERS: cdc-broker:29092
      KAFKA_REST_LISTENERS: http://0.0.0.0:8082/
    healthcheck:
      test: curl --fail --silent http://localhost:8082/topics --output /dev/null || exit 1
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 50s
    networks:
      default:
        ipv4_address: 172.30.1.5
  cdc-redpanda:
    image: docker.redpanda.com/redpandadata/console:v2.3.8
    container_name: cdc-redpanda
    hostname: cdc-redpanda
    entrypoint: /bin/sh
    command: -c "echo \"$$CONSOLE_CONFIG_FILE\" > /tmp/config.yml; /app/console"
    environment:
      CONFIG_FILEPATH: /tmp/config.yml
      CONSOLE_CONFIG_FILE: |
        kafka:
          brokers: ["cdc-broker:29092"]
          schemaRegistry:
            enabled: true
            urls: ["http://cdc-schema-registry:8081"]
        connect:
          enabled: true
          clusters:
            - name: production
              url: http://cdc-debezium:8083
    ports:
      - 9080:8080
    depends_on:
      cdc-broker:
        condition: service_healthy
      cdc-schema-registry:
        condition: service_healthy
      cdc-rest-proxy:
        condition: service_healthy
      cdc-debezium:
        condition: service_healthy
    networks:
      default:
        ipv4_address: 172.30.1.6

  cdc-postgres:
    image: postgres:13
    container_name: cdc-postgres
    hostname: cdc-postgres
    ports:
      - 5436:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: cdc
    command:
      - postgres
      - -c
      - wal_level=logical
    healthcheck:
      test:
        - CMD
        - psql
        - -U
        - postgres
        - -c
        - SELECT 1
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      default:
        ipv4_address: 172.30.1.7
    volumes:
      - ./postgres/postgres_data:/var/lib/postgresql/data

  cdc-clickhouse:
    image: clickhouse/clickhouse-server:24.3.3.102
    container_name: cdc-clickhouse
    hostname: cdc-clickhouse
    volumes:
      - ./clickhouse/clickhouse-server/config.d/config.xml:/etc/clickhouse-server/config.d/config.xml
      - ./clickhouse/clickhouse-server/users.d/users.xml:/etc/clickhouse-server/users.d/users.xml
      - ./clickhouse/data:/var/lib/clickhouse  # <-- Mount data directory here
    ports:
      - 8123:8123
      - 9004:9004
    networks:
      default:
        ipv4_address: 172.30.1.8

networks:
  default:
    driver: bridge
    ipam:
      config:
        - subnet: 172.30.1.0/24